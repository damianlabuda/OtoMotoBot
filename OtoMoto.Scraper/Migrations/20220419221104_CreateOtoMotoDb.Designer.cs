// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtoMoto.Scraper.Entities;

namespace OtoMoto.Scraper.Migrations
{
    [DbContext(typeof(OtoMotoDbContext))]
    [Migration("20220419221104_CreateOtoMotoDb")]
    partial class CreateOtoMotoDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OtoMoto.Scraper.Entities.AdLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SearchLinkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SearchLinkId");

                    b.ToTable("AdLinks");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.SearchLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SearchLinks");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.AdLink", b =>
                {
                    b.HasOne("OtoMoto.Scraper.Entities.SearchLink", "SearchLink")
                        .WithMany("AdLinks")
                        .HasForeignKey("SearchLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SearchLink");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.SearchLink", b =>
                {
                    b.HasOne("OtoMoto.Scraper.Entities.User", "User")
                        .WithMany("SearchLinks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.SearchLink", b =>
                {
                    b.Navigation("AdLinks");
                });

            modelBuilder.Entity("OtoMoto.Scraper.Entities.User", b =>
                {
                    b.Navigation("SearchLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
